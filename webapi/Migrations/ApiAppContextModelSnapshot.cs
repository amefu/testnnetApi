// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiRoutesResponses.Context;

namespace WebApiRoutesResponses.Migrations
{
    [DbContext(typeof(ApiAppContext))]
    partial class ApiAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiRoutesResponses.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("03ac173b-2d9a-4e8c-9c34-d5c79c425184"),
                            Active = true,
                            DateCreated = new DateTime(2020, 9, 7, 19, 27, 31, 568, DateTimeKind.Local).AddTicks(5187),
                            LastName = "LastName 1",
                            Name = "User 1"
                        },
                        new
                        {
                            UserId = new Guid("4bbd705c-3e04-412f-94b5-d8f6cd37e823"),
                            Active = true,
                            DateCreated = new DateTime(2020, 9, 7, 19, 27, 31, 571, DateTimeKind.Local).AddTicks(7347),
                            LastName = "LastName 2",
                            Name = "User 2"
                        },
                        new
                        {
                            UserId = new Guid("faa6666b-5600-4a39-9286-39c5ce8c8015"),
                            Active = true,
                            DateCreated = new DateTime(2020, 9, 7, 19, 27, 31, 571, DateTimeKind.Local).AddTicks(7461),
                            LastName = "LastName 3",
                            Name = "User 3"
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserRoleId = new Guid("a180af88-d341-4c93-8d20-881425303631"),
                            Active = true,
                            Role = "Admin",
                            UserId = new Guid("03ac173b-2d9a-4e8c-9c34-d5c79c425184")
                        },
                        new
                        {
                            UserRoleId = new Guid("092e1091-2315-4aad-bb35-f140c7f045df"),
                            Active = true,
                            Role = "User",
                            UserId = new Guid("03ac173b-2d9a-4e8c-9c34-d5c79c425184")
                        },
                        new
                        {
                            UserRoleId = new Guid("68d972a2-755d-4c69-8fa8-5963c689245f"),
                            Active = true,
                            Role = "Support",
                            UserId = new Guid("03ac173b-2d9a-4e8c-9c34-d5c79c425184")
                        },
                        new
                        {
                            UserRoleId = new Guid("98de4ff8-6ba1-45c1-bafc-a77bddd09ae6"),
                            Active = true,
                            Role = "Admin",
                            UserId = new Guid("4bbd705c-3e04-412f-94b5-d8f6cd37e823")
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.HasOne("WebApiRoutesResponses.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
